binary_sensor:
  - platform: gpio
    internal: true
    pin: GPIO5
    name: "Rotary switch"
    on_click:
    - min_length: 0ms
      max_length: 350ms
      then:
        - script.execute: handle_short_button_press
    - min_length: 350ms
      max_length: 100000ms
      then:
        - script.execute: handle_long_button_press

script:
  - id: handle_short_button_press
    then:
      - sensor.rotary_encoder.set_value:
          id: rotary
          value: !lambda "return ((id(rotary).state > 0) ? 0 : ($default_brightness / (255 / $ring_leds)));"
  - id: handle_long_button_press
    then:
      if:
        condition:
          api.connected:
        then:
          - script.execute: set_automatic
          - lambda: "id(synchronize_encoder) = true;"
          
          # Hack, handles case where auto brightness is identical to current brightness
          - script.execute: handle_short_button_press

          - sensor.rotary_encoder.set_value:
              id: rotary
              value: !lambda return (id(auto_brightness).state / (255 / $ring_leds));
          - lambda: "id(synchronize_encoder) = false;"