# Every room has their own input_number to reflect the light state of that room
# These numbers are used on the dimmer to set/display the auto brightness
input_number:
  brightness: #living_room_brightness
    initial: 0
    min: 0
    max: 255
    step: 1
  kelvin: #living_room_kelvin
    initial: 2000
    min: 2000
    max: 6500
    step: 1


automation:
    # These automations control the input_number based on sun/time/alarm events
    - id: '153823423423'
    alias: Brightness before sunset
    trigger:
    - platform: sun
        event: sunset
        offset: "-00:10:00"
    action:
    - service: input_number.set_value
        data:
        entity_id: input_number.brightness
        value: 200
    - service: input_number.set_value
        data:
        entity_id: input_number.kelvin
        value: 2800
        
    - id: '153823423424'
    alias: Brightness two hours after sunset
    trigger:
    - platform: sun
        event: sunset
        offset: "02:00:00"
    action:
    - service: input_number.set_value
        data:
        entity_id: input_number.brightness
        value: 80
    - service: input_number.set_value
        data:
        entity_id: input_number.kelvin
        value: 2000
        
    - id: '153823423425'
    alias: Brightness after sleep
    trigger:
    - platform: mqtt
        topic: /alarm/time
    action:
    - service: input_number.set_value
        data:
        entity_id: input_number.brightness
        value: 0

    # This automation turns on the lights based on the input_number value
    # This is also the automation that should be disabled when in "manual mode" with the dimmer
    - id: '153823423426'
    alias: Entered living room
    trigger:
        platform: state
        entity_id: binary_sensor.living_room
        from: 'off'
        to: 'on'
    action:
    - service: light.turn_on
        data_template:
        entity_id: light.living_room
        brightness: "{{ states('input_number.brightness') | int }}"
        kelvin: "{{ states('input_number.kelvin') | int }}"
        transition: '1'
        